//-- Opcode 0
0_0_0_0_0_0_0_0_0_0_1_1_0_1_0_0 // ld_ir inc_pc µnext µnext 
0
0
0

@0C //-- Opcode 3: E (jump if A>=0)
0
0_0_0_1_0_0_0_0_0_0_0_0_0_1_1_0 // bge µnext
0_0_0_0_0_0_0_0_0_0_0_0_0_1_0_0 // nop
0_0_0_0_0_0_0_0_0_0_0_0_0_1_0_0 // nop

@14 //-- Opcode 5: T (Transfer A to mem)
0
0_0_0_0_0_0_0_0_0_1_0_0_0_1_0_0 // sel_dat µnext
0_0_0_0_0_1_0_0_0_1_0_0_1_1_0_0 // rst_A rw sel_dat µnext
0_0_0_0_0_0_0_0_0_0_0_0_0_1_0_0 // nop

@20 //-- Opcode 8: I (Input)
0
0_1_0_0_0_0_0_0_0_1_0_0_0_1_0_0 // in µnext
1_0_0_0_0_0_0_0_0_1_0_0_1_1_0_0 // rw sel_dat µnext
0_0_0_0_0_0_0_0_0_0_0_0_0_1_0_0 // nop

@24 //-- Opcode 9: O (output)
0 
0_0_0_0_0_0_0_0_0_1_0_0_0_1_0_0 // sel_dat µnext
0_0_0_0_0_0_0_0_1_1_0_0_0_1_1_0 // out sel_dat
0_0_0_0_0_0_0_0_0_0_0_0_0_1_0_0 // nop

@34 //-- Opcode 13: ZS (HALT)
0
0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_0
0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_0
0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_0

@54 //-- Opcode 21: HS (Load R)
0
0_0_0_0_0_0_0_0_0_1_0_0_0_1_0_0 // sel_dat µnext
0_0_0_0_1_0_0_0_0_1_0_0_0_1_1_0 // ld_R sel_dat µnext
0_0_0_0_0_0_0_0_0_0_0_0_0_1_0_0 // nop


@68 //-- Opcode 26: XS (NOP)
0
0_0_0_0_0_0_0_0_0_0_0_0_0_1_1_1 // nop
0_0_0_0_0_0_0_0_0_0_0_0_0_1_0_0 // nop
0_0_0_0_0_0_0_0_0_0_0_0_0_1_0_0 // nop

@6C //-- Opcode 27: GS (BLT jump if A < 0)
0
0_0_1_0_0_0_0_0_0_0_0_0_0_1_1_0 // blt µnext
0_0_0_0_0_0_0_0_0_0_0_0_0_1_0_0 // nop
0_0_0_0_0_0_0_0_0_0_0_0_0_1_0_0 // nop

@70 //-- Opcode 28: AS (ADD)
0
0_0_0_0_0_0_0_0_0_1_0_0_0_1_0_0 // sel_dat µnext
0_0_0_0_0_0_1_1_0_1_0_0_0_1_1_0 // alu_sum ld_A sel_dat µnext
0_0_0_0_0_0_0_0_0_0_0_0_0_1_0_0 // nop
